import subprocess
import os
from time import sleep

directory = os.getcwd()


projectManager = resolve.GetProjectManager()
project = projectManager.GetCurrentProject()
media_pool = project.GetMediaPool()
media_storage = resolve.GetMediaStorage()
timeline = project.GetCurrentTimeline()
root_folder = media_pool.GetRootFolder()
fps = project.GetSetting("timelineFrameRate")

posX,posY = 750,325
width,height = 450,250
path = ""



def window(posX,posY,width,height):

    css_style = f"""
    color: rgb(205, 205, 245);
    font-family: Garamond;
    font-weight: bold;
    font-size: 16px;
    """


    ui = fusion.UIManager
    dispatcher = bmd.UIDispatcher(ui)

    win = dispatcher.AddWindow({ 'ID': 'myWindow',  'WindowTitle': 'My Window','Events': {'Resize': False, 'Clicked': True, 'Close': True},'Geometry': [posX,posY,width,height]},
                               [ ui.Label({ 'Text': 'Path :','StyleSheet': css_style}),
                                 ui.Button({'ID' : 'Browse','Text':'Execute','Geometry': [width/3,height/1.4,width/4,height/4]}),
                                 ui.LineEdit({'ID':'le_1','PlaceholderText':'Path of the file','Events': {'TextEdited': True},'Geometry': [width/7,height/2.5,width/1.5,height/5]})])

    

    def OnClose(ev):
        dispatcher.ExitLoop()
        win.Hide()
            
    
    def OnButtonClicked(ev):
        if (os.path.exists(path)):
            dispatcher.ExitLoop()
        else:
            print("invalid")
            css_style_error = f"""
            color: rgb(255, 200, 200);
            font-family: Garamond;
            font-weight: bold;
            font-size: 16px;
            """

    def OnLineEditTextEdited(ev):
        global path
        path = ev["Text"]


        

    win.On.myWindow.Close = OnClose
    win.On['le_1'].TextEdited = OnLineEditTextEdited
    win.On['Browse'].Clicked = OnButtonClicked
    win.Show()
    dispatcher.RunLoop()
    dispatcher.ExitLoop()
    win.Hide()

    

window(posX,posY,width,height)






def GetMusicNameFromPath(music_path):
    music_name = ""
    for i in range(len(music_path)-1,0,-1):
        if (music_path[i] == '\\'):
            break
        music_name = music_path[i] + music_name 
    return music_name

def findMusic(music_name, folder=media_pool.GetRootFolder()):
    for clip in folder.GetClipList():
        if clip.GetName() == music_name:
            print("Process on "+clip.GetName()+" in "+folder.GetName())
            return clip
    
    for sub_folder in folder.GetSubFolderList():
        clip = findMusic(music_name, sub_folder)
        if clip:
            return clip 
    return 0




#C:\ProgramData\Blackmagic Design\DaVinci Resolve\Fusion\Scripts\Edit
if (os.path.exists(path)):
    with open("C:\\Users\\HUGO\\AppData\\Roaming\\Blackmagic Design\\DaVinci Resolve\\Support\\Fusion\\Scripts\\Comp\\Beat_Script\\Davinci-Resolve-Beat-detection\\path.txt","w") as file:
        file.write(path)

        
music_name = GetMusicNameFromPath(path)

music_in_davinci = findMusic(music_name)
if (music_in_davinci == 0):
    music_in_davinci = media_pool.ImportMedia(os.path.normpath(path))

    

music_in_davinci.DeleteMarkersByColor("Red")



subprocess.run('C:\\Users\\HUGO\\AppData\\Local\\Programs\\Python\\Python310\\python.exe "C:\\Users\\HUGO\\AppData\\Roaming\\Blackmagic Design\\DaVinci Resolve\\Support\\Fusion\\Scripts\\Comp\\Beat_Script\\Davinci-Resolve-Beat-detection\\hello.py"')



with open("C:\\Users\\HUGO\\AppData\\Roaming\\Blackmagic Design\\DaVinci Resolve\\Support\\Fusion\\Scripts\\Comp\\Beat_Script\\Davinci-Resolve-Beat-detection\\beats.txt", "r") as file:
    lines = file.readlines()
    


beatNb = 0
for line in lines:
    beatNb += 1

    
    line = line.strip().split('.')
    line = line[0] +'.'+ line[1]
    line = float(''.join(line))
    line = line*fps
    music_in_davinci.AddMarker(int(round(line)), "Red", "Beat NÂ° "+str(beatNb),"Generated by Beat Detector Script for more info https://github.com/C0rkito/Davinci-Resolve-Beat-detection/tree/main",1)
  
print("Finish ! ")

